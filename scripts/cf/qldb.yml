AWSTemplateFormatVersion: "2010-09-09"
Description: "Stack for a serverless QLDB ledger. Includes a Ledger database service and the associated IAM resources necessary to interact with the service. Note: all authentication with service is handled through IAM, so be careful with the policy and it's access."

Parameters:
    ledgerName:
      Type: String
      Default: laboratory
      Description: Name of the Ledger within QLDB where tables and documents will be stored.

Resources:
  QLDBLedger:
    Type: AWS::QLDB::Ledger
    Properties:
      Name: !Ref ledgerName
      PermissionsMode: STANDARD
      DeletionProtection: false

  # The service role to grant access for AWS services to act on the user/client's behalf. Currently configured for **Lambda** functions. Adjust accordingly; Add services that need access to QLDB to `Properties.AssumeRolePolicyDocument.Statement[].Principal.Service`
  QLDBServiceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'

  # Scope access to tables and ledgers with `Properties.PolicyDocument.Statement[].Resource`
  QLDBPolicy:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: QLDBAccess
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: QLDBPermissions
            Effect: Allow
            Action:
              - 'qldb:SendCommand'
            Resource: !Sub 'arn:aws:qldb:${AWS::Region}:${AWS::AccountId}:ledger/${ledgerName}'
          - Sid: PartiQLPermissions
            Effect: Allow
            Action:
              - 'qldb:PartiQLCreateTable'
              - 'qldb:PartiQLDropTable'
              - 'qldb:PartiQLUndropTable'
              - 'qldb:PartiQLCreateIndex'
              - 'qldb:PartiQLDropIndex'
              - 'qldb:PartiQLDelete'
              - 'qldb:PartiQLInsert'
              - 'qldb:PartiQLUpdate'
              - 'qldb:PartiQLSelect'
              - 'qldb:PartiQLHistoryFunction'
            Resource: !Sub 'arn:aws:qldb:${AWS::Region}:${AWS::AccountId}:ledger/${ledgerName}/table/*'
      Roles:
        - !Ref QLDBServiceRole

  # TODO: Kinesis Stream and Resources for transaction monitoring